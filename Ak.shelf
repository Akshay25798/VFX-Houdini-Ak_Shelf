<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="Ak" label="Ak">
    <memberTool name="Tempelate"/>
    <memberTool name="Save"/>
    <memberTool name="Take++"/>
    <memberTool name="abc_import"/>
    <memberTool name="geo_prep"/>
    <memberTool name="Setup Render"/>
    <memberTool name="Node_Share"/>
    <memberTool name="Collision"/>
    <memberTool name="Color Code Nulls"/>
  </toolshelf>

  <tool name="Tempelate" label="Tempelate" icon="hicon:/SVGIcons.index?BUTTONS_date.svg">
    <script scriptType="python"><![CDATA[import hou
import os
import platform
tool = "123.py"
user = os.getenv("USERNAME")
houdini = "houdini"+os.getenv("HOUDINI_VERSION")[:-4]
osName = platform.system()

if osName=="Linux":
    path = r"~/{}/scripts/{}".format(houdini,tool)
else:
    path = r"C:\Users\{}\Documents\{}\scripts\{}".format(user,houdini,tool)
try:
    exec(open(path).read())
except:
    execfile(path)]]></script>
  </tool>

  <tool name="Save" label="Save" icon="hicon:/SVGIcons.index?DESKTOP_drive.svg">
    <script scriptType="python"><![CDATA[import hou
import os
import platform
tool = "Save_hip.py"
user = os.getenv("USERNAME")
houdini = "houdini"+os.getenv("HOUDINI_VERSION")[:-4]
osName = platform.system()

if osName=="Linux":
    path = r"~/{}/scripts/{}".format(houdini,tool)
else:
    path = r"C:\Users\{}\Documents\{}\scripts\{}".format(user,houdini,tool)
try:
    exec(open(path).read())
except:
    execfile(path)]]></script>
  </tool>

  <tool name="Take++" label="Take++" icon="hicon:/SVGIcons.index?VOP_add.svg">
    <toolMenuContext name="viewer">
      <contextNetType>OBJ</contextNetType>
      <contextNetType>SOP</contextNetType>
      <contextNetType>DOP</contextNetType>
      <contextNetType>LOP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="cop_viewer">
      <contextNetType>COP2</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>OBJ</contextNetType>
      <contextNetType>SOP</contextNetType>
      <contextNetType>CHOP</contextNetType>
      <contextNetType>ROP</contextNetType>
      <contextNetType>SHOP</contextNetType>
      <contextNetType>COP2</contextNetType>
      <contextNetType>VOP</contextNetType>
      <contextNetType>VOPNET</contextNetType>
      <contextNetType>DOP</contextNetType>
      <contextNetType>TOP</contextNetType>
      <contextNetType>LOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[import hou
import os
import platform
tool = "Take++_hip.py"
user = os.getenv("USERNAME")
houdini = "houdini"+os.getenv("HOUDINI_VERSION")[:-4]
osName = platform.system()

if osName=="Linux":
    path = r"~/{}/scripts/{}".format(houdini,tool)
else:
    path = r"C:\Users\{}\Documents\{}\scripts\{}".format(user,houdini,tool)
try:
    exec(open(path).read())
except:
    execfile(path)]]></script>
  </tool>

  <tool name="Collision" label="Collision" icon="hicon:/SVGIcons.index?SHOP_vopsurface.svg">
    <script scriptType="python"><![CDATA[import hou
import os
import platform
tool = "Collision_Source.py"
user = os.getenv("USERNAME")
houdini = "houdini"+os.getenv("HOUDINI_VERSION")[:-4]
osName = platform.system()

if osName=="Linux":
    path = r"~/{}/scripts/{}".format(houdini,tool)
else:
    path = r"C:\Users\{}\Documents\{}\scripts\{}".format(user,houdini,tool)
try:
    exec(open(path).read())
except:
    execfile(path)]]></script>
  </tool>

  <tool name="Color Code Nulls" label="Color Code Nulls" icon="hicon:/SVGIcons.index?SHOP_surface.svg">
    <script scriptType="python"><![CDATA[import hou
import os
import platform
tool = "Color_Code_Nulls.py"
user = os.getenv("USERNAME")
houdini = "houdini"+os.getenv("HOUDINI_VERSION")[:-4]
osName = platform.system()

if osName=="Linux":
    path = r"~/{}/scripts/{}".format(houdini,tool)
else:
    path = r"C:\Users\{}\Documents\{}\scripts\{}".format(user,houdini,tool)
try:
    exec(open(path).read())
except:
    execfile(path)]]></script>
  </tool>

  <tool name="Node_Share" label="Node_Share" icon="hicon:/SVGIcons.index?VOP_structunpack.svg">
    <toolMenuContext name="network">
      <contextNetType>OBJ</contextNetType>
      <contextNetType>SOP</contextNetType>
      <contextNetType>CHOP</contextNetType>
      <contextNetType>ROP</contextNetType>
      <contextNetType>SHOP</contextNetType>
      <contextNetType>COP2</contextNetType>
      <contextNetType>VOP</contextNetType>
      <contextNetType>VOPNET</contextNetType>
      <contextNetType>DOP</contextNetType>
      <contextNetType>TOP</contextNetType>
      <contextNetType>LOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[import hou
import os
import platform

tool = "Node_Share.py"
user = os.getenv("USERNAME")
houdini = "houdini"+os.getenv("HOUDINI_VERSION")[:-4]
osName = platform.system()

if osName=="Linux":
    path = r"~/{}/scripts/{}".format(houdini,tool)
else:
    path = r"C:\Users\{}\Documents\{}\scripts\{}".format(user,houdini,tool)
try:
    exec(open(path).read())
except:
    execfile(path)]]></script>
  </tool>

  <tool name="Setup Render" label="Setup Render" icon="hicon:/SVGIcons.index?DESKTOP_application.svg">
    <script scriptType="python"><![CDATA[import hou
import os
import platform
tool = "Render_Setup.py"
user = os.getenv("USERNAME")
houdini = "houdini"+os.getenv("HOUDINI_VERSION")[:-4]
osName = platform.system()

if osName=="Linux":
    path = r"~/{}/scripts/{}".format(houdini,tool)
else:
    path = r"C:\Users\{}\Documents\{}\scripts\{}".format(user,houdini,tool)
try:
    exec(open(path).read())
except:
    execfile(path)]]></script>
  </tool>

  <tool name="abc_import" label="abc import" icon="hicon:/SVGIcons.index?PRIMITIVES_alembicref.svg">
    <script scriptType="python"><![CDATA[import hou
import os
import platform

tool = "abc_import.py"
user = os.getenv("USERNAME")
houdini = "houdini"+os.getenv("HOUDINI_VERSION")[:-4]
osName = platform.system()

if osName=="Linux":
    path = r"~/{}/scripts/{}".format(houdini,tool)
else:
    path = r"C:\Users\{}\Documents\{}\scripts\{}".format(user,houdini,tool)
try:
    exec(open(path).read())
except:
    execfile(path)]]></script>
  </tool>

  <tool name="geo_prep" label="Geo Prep" icon="hicon:/SVGIcons.index?MISC_present.svg">
    <script scriptType="python"><![CDATA[import hou
import os
import platform

tool = "geo_prep.py"
user = os.getenv("USERNAME")
houdini = "houdini"+os.getenv("HOUDINI_VERSION")[:-4]
osName = platform.system()

if osName=="Linux":
    path = r"~/{}/scripts/{}".format(houdini,tool)
else:
    path = r"C:\Users\{}\Documents\{}\scripts\{}".format(user,houdini,tool)
try:
    exec(open(path).read())
except:
    execfile(path)]]></script>
  </tool>
</shelfDocument>
